<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Address Management</title>
    <style>
        /* Default styling */
.mobile-buttons {
    right: 0;
    top: 0;
    z-index: 10;
}

/* Adjust for mobile */
@media (max-width: 640px) {
    .mobile-buttons {
        position: absolute;
        left: 0;
        flex-direction: row; /* Stack buttons horizontally */
    }

    .mobile-buttons button {
        transform: translateY(-50%);
    }

    .relative {
        display: flex;
        justify-content: space-between;
        width: 100%;
    }
}

    </style>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

</head>
<body class="bg-black">

    <!-- Header -->
    <%- include("partials/header") %>

    <!-- Breadcrumb -->
    <nav class="text-sm mb-4 px-4 pt-5" aria-label="Breadcrumb">
        <ol class="list-reset flex items-center space-x-2">
            <li>
                <a href="/" class="text-white hover:text-gray-500">Home</a>
            </li>
            <li>
                <span class="text-white">/</span>
            </li>
            <li class="text-white">
                <a href="/userProfile" class="text-white hover:text-gray-500">My Account</a>
            </li>
        </ol>
    </nav>
    <!-- Breadcrumb -->

    <div class="container mx-auto px-4">
        <div class="bg-white shadow-md rounded-lg p-4 sm:p-6">
            <div class="flex items-center mb-6">
                <svg class="w-8 h-8 text-gray-600 hover:text-gray-900" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M12 14c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 0c-4.97 0-9 4.03-9 9v1h18v-1c0-4.97-4.03-9-9-9z"></path>
                </svg>
                <h2 class="text-lg sm:text-2xl font-semibold ml-4">Hello</h2>
            </div>

            <div class="flex flex-col lg:flex-row gap-4">
                <!-- Sidebar -->
                <aside class="w-full lg:w-1/4 bg-gray-200 rounded-lg p-4">
                    <nav class="space-y-4">
                        <a href="/myOrders" class="block text-blue-600 font-semibold">MY ORDERS</a>
                        <div>
                            <h3 class="font-semibold">ACCOUNT SETTINGS</h3>
                            <ul class="mt-2 space-y-2">
                                <li><a href="/userProfile" class="text-gray-700">Profile Information</a></li>
                                <li><a href="/userAdressMang" class="text-gray-700">Manage Addresses</a></li>
                                <li><a href="/orderReturns" class="text-gray-700">Order Returns</a></li>
                                <li><a href="/walletHistory" class="text-gray-700">Wallet History</a></li>
                                <li><a href="/getCoupons" class="text-gray-700">Coupons</a></li>
                            </ul>
                        </div>
                        <div>
                            <h3 class="font-semibold">WALLET BALANCE</h3>
                            <ul class="mt-2 space-y-2">
                                <li><a href="#" class="text-gray-700">₹ <%= user.walletBalance %></a></li>
                            </ul>
                        </div>
                        <div>
                            <h3 class="font-semibold">REFERRAL BALANCE</h3>
                            <ul class="mt-2 space-y-2">
                                <li><a href="#" class="text-gray-700">₹ <%= user.rewardsBalance %></a></li>
                            </ul>
                            <button id="withdraw-ref-bln"
                                class="bg-blue-500 text-white px-4 my-2 rounded hover:bg-blue-600">Withdraw</button>
                        </div>
                        <p class="text-gray-900">My Referral Link:</p>
                        <div class="flex items-center gap-2">
                            <p class="refLink text-blue-600"></p>
                            <button onclick="copyText(this.value)" value=""
                                class="relative inline-flex items-center p-2 rounded bg-transparent hover:bg-gray-100/10 transition-all duration-200">
                                <span id="copyIcon" class="text-gray-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                        fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                        stroke-linejoin="round">
                                        <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                                        <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                                    </svg>
                                </span>
                                <span id="copiedMessage"
                                    class="hidden absolute -top-8 left-1/2 transform -translate-x-1/2 bg-black text-white text-sm px-2 py-1 rounded">
                                    Copied!
                                </span>
                            </button>
                        </div>
                        <p class="text-gray-700">Send this referral link to others. You will get Rs: 19 for each new
                            user.</p>
                    </nav>
                    <div class="mt-10">
                        <a href="/userLogout" class="bg-gray-900 text-white font-bold py-2 px-4 rounded">
                            Logout
                        </a>
                    </div>
                </aside>

                <!-- Main Content -->
                <main class="w-full lg:w-3/4 bg-white rounded-lg p-4">
 
                    <div class="p-6 bg-white rounded-lg shadow-md">
                        <h2 class="text-xl font-semibold text-gray-800 mb-4">Manage Addresses</h2>
                    
                        <div class="mb-6">
                            <button id="toggleFormBtn" class="text-blue-600 font-semibold hover:underline">
                                + ADD A NEW ADDRESS 
                            </button>
                        </div>


                        <!--submit form-->
                        <form id="addressForm" action="/saveAddress" method="POST" class="space-y-4 hidden">
                            
                            <input type="hidden" name="userId"  value="<%= user._id %>">
                            <input type="hidden" name="checkout" value="1" >
                             
                            <div>
                                <label for="name" class="block text-gray-700 font-medium"> Name </label>
                                <input type="text" name="name" id="name" class="mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                <span id="nameError"></span>
                            </div>

                            <div>
                                <label for="phone" class="block text-gray-700 font-medium"> Phone </label>
                                <input type="text" name="phone" id="phone" class="mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                <span id="phoneError"></span>
                            </div>

                            <div>
                                <label for="alternatephone" class="block text-gray-700 font-medium">Alternate Phone</label>
                                <input type="text" name="alternatephone" id="alternatephone" class="mt-1 block w-full border border-gray-300 rounded-md p-2">
                                <span id="alternatephoneError"></span>
                            </div>

                            <div>
                                <label for="address" class="block text-gray-700 font-medium">Address</label>
                                <textarea name="address" id="address" class="mt-1 block w-full border border-gray-300 rounded-md p-2" ></textarea>
                                <span id="addressError"></span>
                            </div>

                            <div>
                                <label for="landmark" class="block text-gray-700 font-medium">Landmark</label>
                                <input type="text" name="landmark" id="landmark" class="mt-1 block w-full border border-gray-300 rounded-md p-2">
                                <span id="landmarkError"></span> 
                            </div>

                            <div>
                                <label for="city" class="block text-gray-700 font-medium">City</label>
                                <input type="text" name="city" id="city" class="mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                <span id="cityError"></span>
                            </div>

                            <div>
                                <label for="state" class="block text-gray-700 font-medium">State</label>
                                <input type="text" name="state" id="state" class="mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                <span id="stateError"></span>
                            </div>

                            <div>
                                <label for="pincode" class="block text-gray-700 font-medium">Pincode</label>
                                <input type="text" name="pincode" id="pincode" class="mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                <span id="pincodeError"></span>
                            </div>

                            <div>
                                <label for="addressType" class="block text-gray-700 font-medium">Address Type</label>
                                <select name="addresstype" id="addressType" class="mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                    <option value="home">Home</option>
                                    <option value="work">Work</option>
                                </select>
                            </div>

                            <div class="text-right">
                                <button type="submit" class="px-4 py-2 mt-10 mb-10 bg-blue-600 text-white font-semibold rounded hover:bg-blue-700">Save</button>
                            </div>
                        </form>
                        <!---..........--> 
                    
                        <% addresses.forEach((address , index ) => { %>
                            <div class="border border-gray-200 rounded-lg mb-4 p-4">
                           
                                <div class="flex justify-between items-start">

                                 
                                    <div class="flex items-center mb-2">
                                        <span class="px-2 py-1 bg-gray-200 text-gray-700 text-xs font-semibold rounded"> 
                                            <% if (address.addresstype === 'work') { %>
                                                WORK
                                            <% } else { %>
                                                HOME
                                            <% } %>
                                         </span>
                                        <div class="ml-3">
                                            <h3 class="text-lg font-semibold text-gray-800"><%= address.name %></h3>
                                            <p class="text-sm text-gray-600"><%= address.phone %></p>
                                        </div>
                                    </div>
                    
                                    <div class="relative">
                                        <div class="absolute right-0 flex space-x-2 sm:left-auto sm:right-0 mobile-buttons">
                                            <button class="addressEditBtn bg-blue-500 text-white rounded px-2 py-1 text-xs sm:px-2 sm:py-1 sm:text-sm">
                                                Edit
                                            </button>
                                            <button onclick="showDeleteConfirmation('<%= address.id %>')" class="bg-red-500 text-white rounded px-2 py-1 text-xs sm:px-4 sm:py-2 sm:text-sm">
                                                Delete
                                            </button>
                                        </div>
                                    </div>

                                    
                                </div>
                    
                                <p class="text-sm text-gray-600">
                                    <%= address.address %>, <%= address.landmark %>, <%= address.city %>, <%= address.state %> - <span class="font-semibold"><%= address.pincode %></span>
                                </p>
                            
                            
                            <!--Edit Form-->
                           
                                <form id="" action="/saveEditAddress/<%=address.id %>" method="POST" class="editAddressForm space-y-4 hidden" data-index="<%= index %>" >
                                    
                            
                                    <!-- <input type="hidden" name=""  value="<%= user._id %>"> -->
                                     
                                    <div>
                                        <label for="name" class="block text-gray-700 font-medium">Name</label>
                                        <input type="text" value="<%= address.name %>" name="name" id="" class=" e-name mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                        <span class="e-nameError"></span>
                                    </div>
        
                                    <div>
                                        <label for="phone" class="block text-gray-700 font-medium">Phone</label>
                                        <input type="text" value='<%=address.phone %>' name="phone" id="" class="e-phone mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                        <span class="e-phoneError"></span>
                                        
                                    </div>
        
                                    <div>
                                        <label for="alternatephone" class="block text-gray-700 font-medium">Alternate Phone</label>
                                        <input type="text" value="<%= address.alternatePhone %>" name="alternatephone" id="" class="e-alternatephone mt-1 block w-full border border-gray-300 rounded-md p-2">
                                        <span class="e-alternatephoneError"></span>
                                    </div>
        
                                    <div>
                                        <label for="address" class="block text-gray-700 font-medium">Address</label>
                                        <textarea name="address"  id="" class="e-address mt-1 block w-full border border-gray-300 rounded-md p-2" > <%= address.address %> </textarea>
                                        <span class="e-addressError"></span>
                                    </div>
        
                                    <div>
                                        <label for="landmark" class="block text-gray-700 font-medium">Landmark</label>
                                        <input type="text" value="<%= address.landmark %>" name="landmark" id="" class="e-landmark mt-1 block w-full border border-gray-300 rounded-md p-2">
                                        <span class="e-landmarkError"></span> 
                                    </div>
        
                                    <div>
                                        <label for="city" class="block text-gray-700 font-medium">City</label>
                                        <input type="text" value="<%= address.city %>" name="city" id="" class=" e-city mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                        <span class="e-cityError"></span>
                                    </div>
        
                                    <div>
                                        <label for="state" class="block text-gray-700 font-medium">State</label>
                                        <input type="text" value="<%= address.state %>" name="state" id="" class="e-state mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                        <span class="e-stateError"></span>
                                    </div>
        
                                    <div>
                                        <label for="pincode" class="block text-gray-700 font-medium">Pincode</label>
                                        <input type="text" value="<%= address.pincode %>
                                        " name="pincode" id="" class="e-pincode mt-1 block w-full border border-gray-300 rounded-md p-2" >
                                        <span class="e-pincodeError"></span>
                                    </div>

                                    <input type="hidden" name="checkout" value='0' >  
        
                                    <div>
                                        <label for="addressType" class="block text-gray-700 font-medium">Address Type</label>
                                        <select name="addresstype" id="addressType" class="mt-1 block w-full border border-gray-300 rounded-md p-2" required>
                                            <option value="home" <%= address.addresstype === 'home' ? 'selected' : '' %> >Home</option>
                                            <option value="work" <%= address.addresstype === 'work' ? 'selected' : '' %> >Work</option>
                                        </select>
                                    </div>
        
                                    <div class="text-right">
                                        <button type="submit" class="px-4 py-2 mt-10 mb-10 bg-blue-600 text-white font-semibold rounded hover:bg-blue-700">Save Changes</button>
                                    </div>

                                </form>
                            </div>
                        <% }); %>
                    </div>
                    

                </main>
            </div>
        </div>
    </div>

     <!-- Footer -->
     <%- include("partials/footer") %>

     <!-- Delete Confirmation Modal -->
     <div id="deleteModal" class="fixed z-10 inset-0 overflow-y-auto hidden">
         <div class="flex items-center justify-center min-h-screen">
             <div class="bg-blue-500 rounded-lg shadow-lg w-full max-w-md p-6">
                 <h3 class="text-lg font-medium text-white mb-4">Confirm Delete</h3> 
                 <p class="text-white mb-6">Are you sure you want to delete this address?</p> 
                 <div class="flex justify-end">
                     <button class="mr-2 px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300" onclick="hideDeleteConfirmation()">
                         Cancel
                     </button>
                     <a href="#" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600"> 
                         Delete
                     </a>
                 </div>
             </div>
         </div>
     </div>



     <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>  

    <script>


// // Validation add- address
const nameInput = document.getElementById("name");
const phoneInput = document.getElementById("phone");
const alternatephoneInput = document.getElementById("alternatephone");
const addressInput = document.getElementById("address");
const landMarkInput = document.getElementById("landmark");
const cityInput = document.getElementById("city");
const stateInput = document.getElementById("state");
const pincodeInput = document.getElementById("pincode");

const nameError = document.getElementById("nameError");
const phoneError = document.getElementById("phoneError");
const alternatephoneError = document.getElementById("alternatephoneError");
const addressError = document.getElementById("addressError");
const landMarkError = document.getElementById("landmarkError");
const cityError = document.getElementById("cityError");
const stateError = document.getElementById("stateError");
const pincodeError = document.getElementById("pincodeError");

// Show validation messages
function showMessage(element, message, isValid) {
    element.textContent = message;
    element.style.color = isValid ? 'green' : 'red';
}

// Validation functions
function validateName() {
    const name = nameInput.value.trim();
    if (name.length < 3 || !/^[a-zA-Z\s]+$/.test(name)){
        showMessage(nameError, "Name must be at least 3 characters", false);
        return false;
    }
    showMessage(nameError, "valid", true);
    return true;
}

function validatePhone() {
    const phone = phoneInput.value.trim();
    const phonePattern = /^[6-9]\d{9}$/;;
    if (!phonePattern.test(phone)) {
        showMessage(phoneError, "Enter a valid 10-digit phone number", false);
        return false;
    }
    showMessage(phoneError, "valid", true);
    return true;
}

function validateAlternatephone() {
    const altPhone = alternatephoneInput.value.trim();
    if (altPhone && !/^[6-9]\d{9}$/.test(altPhone)) {
        showMessage(alternatephoneError, "Enter a valid 10-digit phone number", false);
        return false;
    }
    showMessage(alternatephoneError, "valid", true);
    return true;
}

function validateAddress() {
    const address = addressInput.value.trim();
    if (address.length < 5  || !/^[a-zA-Z][a-zA-Z ,.]+$/.test(address) ) {
        showMessage(addressError, "Address must start with a letter and contain only letters, spaces, and commas", false);
        return false;
    }
    showMessage(addressError, "valid", true);
    return true;
}

function validateLandmark() {
    const landmark  = landMarkInput.value.trim() ; 
    if (landmark.length < 4 || !/^[a-zA-Z]+$/.test(landmark) ) {
        showMessage(landMarkError, "Enter a valid landmark ", false);
        return false;
    }
    showMessage(landMarkError, "valid", true);
    return true;
}

function validateCity() {
    const city = cityInput.value.trim();
    if (city.length <4 || !/^[a-zA-Z]+$/.test(city) ) {
        showMessage(cityError, "Enter a valid city name", false ) ; 
        return false;
    }
    showMessage(cityError, "valid", true);
    return true;
}

function validateState() {
    const state = stateInput.value.trim();
    if (state.length <4 || !/^[a-zA-Z]+$/.test(state) ) {
        showMessage(stateError, "Enter a valid state name", false) ;
        return false;
    }
    showMessage(stateError, "valid", true);
    return true;
}

function validatePincode() {
    const pincode = pincodeInput.value.trim();
    if ( (!/^[0-9]{6}$/.test(pincode) || /^0{6}$/.test(pincode))) {
        showMessage(pincodeError, "Enter a valid 6-digit pincode", false);
        return false;
    }
    showMessage(pincodeError, "valid", true);
    return true;
}


// Event listeners for real-time validation
nameInput.addEventListener("keyup", validateName);
phoneInput.addEventListener("keyup", validatePhone); 
alternatephoneInput.addEventListener("keyup", validateAlternatephone) ; 
addressInput.addEventListener("keyup", validateAddress);
landMarkInput.addEventListener("keyup", validateLandmark);
cityInput.addEventListener("keyup", validateCity);
stateInput.addEventListener("keyup", validateState);
pincodeInput.addEventListener("keyup", validatePincode);



// Form submission handler
document.getElementById("addressForm").addEventListener("submit", (e) => {
    // Prevent form submission if any validation fails
    if (
        !validateName() ||
        !validatePhone() ||
        !validateAlternatephone() ||
        !validateAddress() ||
        !validateLandmark() ||
        !validateCity() || 
        !validateState() ||
        !validatePincode()
    ) {
        e.preventDefault() ; // Stop form submission
    
    }
});
 



  
     //toggle the form input 
     document.getElementById("toggleFormBtn").addEventListener("click" , function(){
        
        document.getElementById("addressForm").classList.toggle("hidden") ;
  })



//toggle edit form    
for( let i = 0 ; i < '<%=addresses.length %>'  ; i++ ){
 
 document.getElementsByClassName("addressEditBtn")[i].addEventListener("click" , function(){
 document.getElementsByClassName("editAddressForm")[i].classList.toggle("hidden");


 })
}




//Validation edit- address
const e_nameInput = document.getElementsByClassName("e-name");
const e_phoneInput = document.getElementsByClassName("e-phone");
const e_alternatephoneInput = document.getElementsByClassName("e-alternatephone");
const e_addressInput = document.getElementsByClassName("e-address");
const e_landMarkInput = document.getElementsByClassName("e-landmark");
const e_cityInput = document.getElementsByClassName("e-city");
const e_stateInput = document.getElementsByClassName("e-state");
const e_pincodeInput = document.getElementsByClassName("e-pincode");

const e_nameError = document.getElementsByClassName("e-nameError");
const e_phoneError = document.getElementsByClassName("e-phoneError");
const e_alternatephoneError = document.getElementsByClassName("e-alternatephoneError");
const e_addressError = document.getElementsByClassName("e-addressError");
const e_landMarkError = document.getElementsByClassName("e-landmarkError");
const e_cityError = document.getElementsByClassName("e-cityError");
const e_stateError = document.getElementsByClassName("e-stateError");
const e_pincodeError = document.getElementsByClassName("e-pincodeError");



//Validation functions
function e_validateName(i) {
    const name = e_nameInput[i].value.trim();
    if (name.length < 3 || !/^[a-zA-Z\s]+$/.test(name)){
        showMessage(e_nameError[i], "Name must be at least 3 characters", false);
        return false;
    }
    showMessage(e_nameError[i], "valid", true);
    return true;
}

function e_validatePhone(i) {
    const phone = e_phoneInput[i].value.trim();
    const phonePattern = /^[6-9]\d{9}$/;;
    if (!phonePattern.test(phone)) {
        showMessage(e_phoneError[i], "Enter a valid 10-digit phone number", false);
        return false;
    }
    showMessage(e_phoneError[i], "valid", true);
    return true;
}

function e_validateAlternatephone(i) {
    const altPhone = e_alternatephoneInput[i].value.trim();
    
    if (altPhone && !/^[6-9]\d{9}$/.test(altPhone)) {
        showMessage(e_alternatephoneError[i], "Enter a valid 10-digit phone number", false);
        return false;
    }
    showMessage(e_alternatephoneError[i], "valid", true);
    return true;
}

function e_validateAddress(i) {
    const address = e_addressInput[i].value.trim();
    if (address.length < 5  || !/^[a-zA-Z][a-zA-Z ,.]+$/.test(address) ) {
        showMessage(e_addressError[i], "Address must start with a letter and contain only letters, spaces, and commas", false);
        return false;
    }
    showMessage(e_addressError[i], "valid", true);
    return true;
}

function e_validateLandmark(i) {
    const landmark  = e_landMarkInput[i].value.trim() ; 
    if (landmark.length < 4 || !/^[a-zA-Z]+$/.test(landmark) ) {
        showMessage(e_landMarkError[i], "Enter a valid landmark ", false);
        return false;
    }
    showMessage(e_landMarkError[i], "valid", true);
    return true;
}

function e_validateCity(i) {
    const city = e_cityInput[i].value.trim();
    if (city.length <4 || !/^[a-zA-Z]+$/.test(city) ) {
        showMessage(e_cityError[i], "Enter a valid city name", false ) ; 
        return false;
    }
    showMessage(e_cityError[i], "valid", true);
    return true;
}

function e_validateState(i) {
    const state = e_stateInput[i].value.trim();
    if (state.length <4 || !/^[a-zA-Z]+$/.test(state) ) {
        showMessage(e_stateError[i], "Enter a valid state name", false) ;
        return false;
    }
    showMessage(e_stateError[i], "valid", true);
    return true;
}

function e_validatePincode(i) {
    const pincode = e_pincodeInput[i].value.trim();
    if ( (!/^[0-9]{6}$/.test(pincode) || /^0{6}$/.test(pincode))) {
        showMessage(e_pincodeError[i], "Enter a valid 6-digit pincode", false);
        return false;
    }
    showMessage(e_pincodeError[i], "valid", true);
    return true;
}




    document.querySelectorAll('.editAddressForm').forEach( (form , i) =>{
        form.addEventListener("submit" , (e) =>{
            if (
        !e_validateName(i) ||
        !e_validatePhone(i) ||
        !e_validateAlternatephone(i) ||
        !e_validateAddress(i) ||
        !e_validateLandmark(i) ||
        !e_validateCity(i) || 
        !e_validateState(i) ||
        !e_validatePincode(i)
    ) {
        e.preventDefault() ; // Stop form submission
    
    }       
        } )
    })

    

    
 



    

 
    
    
      


    //delete modal
    function showDeleteConfirmation(addressId) {
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.classList.remove('hidden');
        deleteModal.querySelector('a').href = `/deleteAddress/${addressId}`;
    }

    function hideDeleteConfirmation() {
        const deleteModal = document.getElementById('deleteModal'); 
        deleteModal.classList.add('hidden');
    }






    function copyText(text) {
    // Copy the text
    navigator.clipboard.writeText(text);
    
    // Show the copied message
    const message = document.getElementById('copiedMessage');
    const copyIcon = document.getElementById('copyIcon');
    
    // Change icon to checkmark
    copyIcon.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-green-500">
            <polyline points="20 6 9 17 4 12"></polyline>
        </svg>
    `;
    
    // Show message
    message.classList.remove('hidden');
    
    // Hide message and restore icon after 2 seconds
    setTimeout(() => {
        message.classList.add('hidden');
        copyIcon.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
            </svg>
        `;
    }, 2000);
}




//copy referal link

const referralCode = '<%= user.referralCode %>' ;

const url = new URL(window.location.href);

const referalLink = url.origin  +  '/userSignup' + `?referral=${referralCode}`
   
const ref = document.querySelectorAll(".refLink") ; 
ref[0].textContent = referalLink ;
ref[1].value = referalLink ;



//WITHDRAW REFERAL BALANCE

document.getElementById("withdraw-ref-bln").addEventListener( "click", ()=>{
    if('<%= user.rewardsBalance %>' == 0 ){
        Swal.fire({
            icon: 'error',
            title: 'No balance',
            text: 'You have no balance to withdraw.'
        });
        return;
    }
    fetch("/withDrawRefferalBalance", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({
           
            amount :  '<%= user.rewardsBalance %>'  ,
            userId : '<%= user._id %>'
        })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json() ; 
    })
    .then(data => {
        if(data.status){
            Swal.fire({
                icon: 'success',
                title: 'Withdrawal Successful',
                text: 'Your referral balance has been withdrawn to wallet account.' 
            }).then(() => {
                window.location.reload();
            });
        }else{
            Swal.fire({
                icon: 'error',
                title: 'Withdrawal Failed',
                text: 'Failed to withdraw referral balance.' 
            });

        }
    }) 
    .catch(error => {
        console.error('Error:', error);
        
    });
} )
   
    
    </script>

</body>
</html>
