<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Full Screen Div with Tailwind</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet"/>
  <script src="https://cdn.tailwindcss.com"> </script>
</head>
<body class="">
  <div class="flex justify-center items-center h-full bg-[#082f49]"> 

    
    
    <div class="container mx-auto p-4">

        
      <!-- Add New Coupon Button -->
      <div class="flex justify-end mb-4">
        <button id="addNewCouponButton" class="bg-green-500 text-white p-2 rounded">Add New Coupon</button>
      </div>


        <form id="updateForm" action="/admin/coupon-update" method="PUT">
        <table class="table-auto w-full border-collapse border border-gray-200"> 
            <thead class="bg-gray-100">
                <tr>
                    <th class="border border-gray-300 p-2">Coupon Code</th>
                    <th class="border border-gray-300 p-2">Discount Value</th>
                    <th class="border border-gray-300 p-2">Usage Limit</th>
                    <th class="border border-gray-300 p-2">Expiry Date</th>
                    <th class="border border-gray-300 p-2">Action</th>
                </tr>
            </thead>
            <tbody id="table-body">
                <% coupons.forEach(function(coupon, index) { %> 
                <tr>
                    <td class="border border-gray-300 p-2">
                        <input type="text" readonly name="code[]" value="<%= coupon.code %>" class="w-full p-1 border border-gray-300" >
                    </td>
                    <td class="border border-gray-300 p-2">
                        <input type="number" min="0"  name="discountValue[]" value="<%= coupon.couponBalance %>" class="w-full p-1 border border-gray-300" >
                    </td>
                    <td class="border border-gray-300 p-2">
                        <input type="number" min="1" name="usageLimit[]" value="<%= coupon.usageLimit %>" class="w-full p-1 border border-gray-300" >
                    </td>
                    <td class="border border-gray-300 p-2">
                         <input type="date" name="expiryDate[]" value="<%= coupon.expiryDate.toISOString().split('T')[0] %>" class="w-full p-1 border border-gray-300" > 


                     
                 
                      </td>
               
                    <td class="border border-gray-300 p-2 text-red-500">
                        <button class="text-red-500 hover:underline" onclick="deleteRow('<%= coupon._id %> ' , this)">Delete</button>
                    </td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    
        <!-- <button id="addRowButton" class="mt-4 p-2 bg-blue-500 text-white rounded">Add Row</button> -->
        <button id="submit" class="mt-4 p-2 bg-blue-500 text-white rounded">Save</button>
    </form>


     <!-- Pagination --> 
     <div class="mt-2 mb-20">
      <div class="flex justify-center mt-4">
          <a href="<%= currentPage > 1 ? '?page=' + (currentPage - 1) : '#' %>" 
              class="px-4 py-2 mx-1 rounded 
                     <%= currentPage === 1 ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-gray-500 text-white hover:bg-gray-600' %>">
               &laquo; Prev
          </a>

          <% for (let i = 1; i <= totalPages; i++) { %>
              <a href="?page=<%= i %>"  
                 class="px-4 py-2 mx-1 rounded 
                        <%= currentPage === i ? 'bg-blue-500 text-white hover:bg-blue-600' : 'bg-gray-300 text-white hover:bg-gray-400' %>">
                  <%= i %>
              </a>
          <% } %>
        
          <a href="<%= currentPage < totalPages ? '?page=' + (currentPage + 1) : '#' %>" 
              class="px-4 py-2 mx-1 rounded 
                     <%= currentPage === totalPages ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-gray-500 text-white hover:bg-gray-600' %>">
               &raquo; Next
          </a>
      </div>
   </div>
    
    </div>

  </div>




     <!-- Modal for Adding New Coupon -->
     <div id="addCouponModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
      <div class="bg-white rounded-lg p-8 w-1/3">
        <h2 class="text-2xl mb-4">Add New Coupon</h2>
        <form id="newCouponForm">
          <div class="mb-4">
            <label for="newCode" class="block text-sm font-medium">Coupon Code</label>
            <input type="text" id="newCode" name="code" class="w-full p-2 border rounded  " >
          </div>
          <div class="mb-4">
            <label for="newDiscountValue" class="block text-sm font-medium">Discount Value</label>
            <input type="number" id="newDiscountValue" name="discountValue" class="w-full p-2 border rounded"  min="0">
          </div>
          <div class="mb-4">
            <label for="newUsageLimit" class="block text-sm font-medium">Usage Limit</label>
            <input type="number" id="newUsageLimit" name="usageLimit" class="w-full p-2 border rounded"  min="1">
          </div>
          <div class="mb-4">
            <label for="newExpiryDate" class="block text-sm font-medium">Expiry Date</label>
            <input type="date" id="newExpiryDate" name="expiryDate" class="w-full p-2 border rounded" required>
          </div>
          <div class="flex justify-end">
            <button type="button" id="closeModalButton" class="mr-2 p-2 bg-gray-500 text-white rounded">Cancel</button>
            <button type="submit" class="p-2 bg-blue-500 text-white rounded">Save</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>


  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
  <script>
    

//update coupon
document.getElementById("updateForm").addEventListener("submit", async (e) => {
  e.preventDefault();

  // Collecting form data into arrays
  const codes = Array.from(document.querySelectorAll("input[name='code[]']")).map(input => input.value);
  const discountValues = Array.from(document.querySelectorAll("input[name='discountValue[]']")).map(input => input.value);
  const usageLimits = Array.from(document.querySelectorAll("input[name='usageLimit[]']")).map(input => input.value);
  const expiryDates = Array.from(document.querySelectorAll("input[name='expiryDate[]']")).map(input => input.value);

 
 
  // Validate fields and show an error if any required field is empty
  let hasError = false;
  codes.forEach((code, index) => {
    if (!code || !discountValues[index] || !usageLimits[index] || !expiryDates[index]) {
      hasError = true;
    }
  });

  if (hasError) {
    toastr.error("Please ensure all fields are filled out.");
    return; // Stop submission if there is an error
  }


  // Structuring data into a single array of coupon objects
  const coupons = codes.map((code, i) => ({
    code,
    discountValue: parseFloat(discountValues[i]),
    usageLimit: parseInt(usageLimits[i]),
    expiryDate: expiryDates[i],
  }));

  // Sending the array of coupons to the server
  try {
    const response = await fetch("/admin/coupon-update", {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ coupons })
    });

    if (response.ok) {
      const data = await response.json();
      toastr.success(data.message);
      // Optionally refresh the table or update the UI
    } else {
      const errorData = await response.json();
      toastr.error(errorData.message);
    }
  } catch (error) {
    toastr.error("Error updating coupons."); 
  }
});





//delete coupon
function deleteRow(id , element) {

    event.preventDefault() ; 
    const couponId = id ; 

    // SwalFire popup confirmation
    Swal.fire({
      title: 'Are you sure?' ,
      text: "You won't be able to revert this!" ,
      icon: 'warning' ,
      showCancelButton: true ,
      confirmButtonColor: '#3085d6' ,
      cancelButtonColor: '#d33' ,
      confirmButtonText: 'Yes, delete it!' 
    }).then((result) => {
      if (result.isConfirmed) {
        // Send the ID to the backend for deletion
        fetch(`/admin/coupon-delete/${couponId}`, {
          method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
            if(data.success) {
        Swal.fire(
          'Deleted!',
          'Your coupon has been deleted.',
          'success'
        );
        // Remove the deleted row from the table
        element.closest('tr').remove();
      }
          else {
            Swal.fire('Error', 'Something went wrong while deleting the coupon', 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire('Error', 'Unable to delete the coupon.', 'error');
        });
      }
    });
  }









  // Toggle modal display
  const modal = document.getElementById("addCouponModal");
    document.getElementById("addNewCouponButton").addEventListener("click", () => {
      modal.classList.remove("hidden");
    });

    document.getElementById("closeModalButton").addEventListener("click", () => {
      modal.classList.add("hidden");
    });



    // Add new coupon via modal form
    document.getElementById("newCouponForm").addEventListener("submit", function (event) {
      event.preventDefault() ;
     
      
      let code =  document.getElementById("newCode").value.trim( );
      if( !/^[a-zA-Z0-9]+$/.test(code) ){
        return  toastr.error('coupon contails only alphabets and numbers')  
      }
      
      

      const newCouponData = {
        code,
        discountValue: document.getElementById("newDiscountValue").value,
        usageLimit: document.getElementById("newUsageLimit").value,
        expiryDate: document.getElementById("newExpiryDate").value
      };

      if(newCouponData.discountValue < 0 ){
        return toastr.error('Enter a valid discount value')  
      }

      if(newCouponData.usageLimit < 1 ){
        return toastr.error('usage limit minumum one')  
      }

     

      fetch("/admin/coupon-add", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(newCouponData)
      })
      .then(response => response.json())
      .then(data => {
        toastr.success("Coupon added successfully!");
        location.reload(); // Refresh page to display the new coupon
      })
      .catch(error => {
        console.error("Error:", error);
        toastr.error("Failed to add coupon.");
      });
    });





  </script>
</body>
</html>
